// <auto-generated />
using System;
using GameShop.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GameShop.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210126153936_EditedOrderEntity")]
    partial class EditedOrderEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GameShop.Domain.Model.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(320)")
                        .HasMaxLength(320);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("GameShop.Domain.Model.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "PC Description",
                            Name = "PC"
                        },
                        new
                        {
                            Id = 2,
                            Description = "PS4 Description",
                            Name = "PS4"
                        },
                        new
                        {
                            Id = 3,
                            Description = "XBOX One Description",
                            Name = "XONE"
                        });
                });

            modelBuilder.Entity("GameShop.Domain.Model.CategorySubCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId", "SubCategoryId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("CategoriesSubCategories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            SubCategoryId = 1
                        },
                        new
                        {
                            CategoryId = 1,
                            SubCategoryId = 2
                        },
                        new
                        {
                            CategoryId = 1,
                            SubCategoryId = 3
                        },
                        new
                        {
                            CategoryId = 1,
                            SubCategoryId = 4
                        },
                        new
                        {
                            CategoryId = 1,
                            SubCategoryId = 5
                        },
                        new
                        {
                            CategoryId = 1,
                            SubCategoryId = 6
                        },
                        new
                        {
                            CategoryId = 1,
                            SubCategoryId = 7
                        },
                        new
                        {
                            CategoryId = 2,
                            SubCategoryId = 1
                        },
                        new
                        {
                            CategoryId = 2,
                            SubCategoryId = 2
                        },
                        new
                        {
                            CategoryId = 2,
                            SubCategoryId = 3
                        },
                        new
                        {
                            CategoryId = 2,
                            SubCategoryId = 6
                        },
                        new
                        {
                            CategoryId = 2,
                            SubCategoryId = 7
                        },
                        new
                        {
                            CategoryId = 3,
                            SubCategoryId = 1
                        },
                        new
                        {
                            CategoryId = 3,
                            SubCategoryId = 2
                        },
                        new
                        {
                            CategoryId = 3,
                            SubCategoryId = 3
                        },
                        new
                        {
                            CategoryId = 3,
                            SubCategoryId = 6
                        },
                        new
                        {
                            CategoryId = 3,
                            SubCategoryId = 7
                        });
                });

            modelBuilder.Entity("GameShop.Domain.Model.DeliveryOpt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(400)")
                        .HasMaxLength(400);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(9,2)");

                    b.HasKey("Id");

                    b.ToTable("DeliveryOpts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Currency = "$",
                            Description = "Lorem ipsum dolor sit amet consectetur, adipisicing elit. Odit, similique?",
                            Name = "DPD",
                            Price = 5m
                        },
                        new
                        {
                            Id = 2,
                            Currency = "$",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam pharetra, magna et blandit faucibus, tortor turpis euismod tellus, eu efficitur lorem ligula in ante.Maecenas finibus velit vel ante dictum sagittis. Morbi vitae eros tellus. Fusce mollis sit amet est sed accumsan.",
                            Name = "DHL",
                            Price = 4.55m
                        },
                        new
                        {
                            Id = 3,
                            Currency = "$",
                            Description = "Vivamus sed nulla quam. Aliquam sit amet risus hendrerit orci scelerisque pellentesque.",
                            Name = "INPOST",
                            Price = 5.20m
                        },
                        new
                        {
                            Id = 4,
                            Currency = "$",
                            Description = "Usce mollis sit amet est sed accumsan. Proin vel quam vitae velit condimentum lobortis et ac diam.",
                            Name = "DIGITAL_PRODUCT",
                            Price = 0m
                        });
                });

            modelBuilder.Entity("GameShop.Domain.Model.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Polish"
                        },
                        new
                        {
                            Id = 2,
                            Name = "English"
                        },
                        new
                        {
                            Id = 3,
                            Name = "German"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Russian"
                        },
                        new
                        {
                            Id = 5,
                            Name = "French"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Italian"
                        });
                });

            modelBuilder.Entity("GameShop.Domain.Model.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("DeliveryType")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(320)")
                        .HasMaxLength(320);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<decimal>("OrderPrice")
                        .HasColumnType("decimal(9,2)");

                    b.Property<Guid>("OrderRef")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("StripeRef")
                        .IsRequired()
                        .HasColumnType("nvarchar(35)")
                        .HasMaxLength(35);

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("GameShop.Domain.Model.OrderStock", b =>
                {
                    b.Property<int>("StockId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(9,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("StockId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderStocks");
                });

            modelBuilder.Entity("GameShop.Domain.Model.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("PublicId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(130)")
                        .HasMaxLength(130);

                    b.Property<bool>("isMain")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Photos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateAdded = new DateTime(2020, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 1,
                            Url = "http://placehold.it/200x300.jpg",
                            isMain = true
                        },
                        new
                        {
                            Id = 2,
                            DateAdded = new DateTime(2020, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 2,
                            Url = "http://placehold.it/200x300.jpg",
                            isMain = true
                        },
                        new
                        {
                            Id = 3,
                            DateAdded = new DateTime(2020, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 3,
                            Url = "http://placehold.it/200x300.jpg",
                            isMain = true
                        },
                        new
                        {
                            Id = 4,
                            DateAdded = new DateTime(2020, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 4,
                            Url = "http://placehold.it/200x300.jpg",
                            isMain = true
                        },
                        new
                        {
                            Id = 5,
                            DateAdded = new DateTime(2020, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 5,
                            Url = "http://placehold.it/200x300.jpg",
                            isMain = true
                        },
                        new
                        {
                            Id = 6,
                            DateAdded = new DateTime(2020, 1, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 6,
                            Url = "http://placehold.it/200x300.jpg",
                            isMain = true
                        },
                        new
                        {
                            Id = 7,
                            DateAdded = new DateTime(2020, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 7,
                            Url = "http://placehold.it/200x300.jpg",
                            isMain = true
                        });
                });

            modelBuilder.Entity("GameShop.Domain.Model.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<bool>("IsDigitalMedia")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte>("Pegi")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(9,2)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = @"Nulla amet commodo minim esse adipisicing commodo sint esse laboris adipisicing. Officia Lorem laboris ipsum labore mollit ipsum est enim elit exercitation quis deserunt. Nostrud dolore ut sint est ut officia voluptate consequat mollit. Nulla cupidatat mollit dolore non consequat amet Lorem. Magna dolor veniam anim aliquip aliquip esse consequat velit veniam tempor in.
",
                            IsDigitalMedia = true,
                            Name = "The Witcher 3 Wild Hunt",
                            Pegi = (byte)18,
                            Price = 48.82m,
                            ReleaseDate = new DateTime(2017, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Description = @"Exercitation occaecat esse sunt elit adipisicing magna quis laborum. Sunt consequat nulla minim labore. Laborum ut irure cupidatat et ullamco minim occaecat id consequat officia non. Deserunt incididunt ea qui incididunt. Duis laborum proident do nulla anim laboris eiusmod incididunt velit.
",
                            IsDigitalMedia = false,
                            Name = "Assassin’s Creed Odyssey",
                            Pegi = (byte)16,
                            Price = 26.81m,
                            ReleaseDate = new DateTime(2017, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Description = @"Voluptate ut in commodo eu dolore aliquip ex. Pariatur velit laborum anim cillum et sit irure sit. Ipsum cillum officia ipsum irure consectetur irure occaecat deserunt aliquip esse consectetur eu. Cupidatat sit consequat magna sit pariatur consequat. Enim labore commodo nisi sunt commodo.
",
                            IsDigitalMedia = true,
                            Name = "Battlefield V",
                            Pegi = (byte)12,
                            Price = 34.82m,
                            ReleaseDate = new DateTime(2017, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Description = @"Ex consectetur nisi id laborum laboris. Officia eu culpa nisi sint incididunt tempor consequat reprehenderit cillum proident minim laboris. Eiusmod proident nulla laboris eiusmod excepteur fugiat adipisicing voluptate aliqua sunt anim est. Non tempor duis veniam et consequat ipsum ullamco. Culpa aute dolor commodo amet proident deserunt consequat pariatur reprehenderit officia.
",
                            IsDigitalMedia = true,
                            Name = "Layers of Fear",
                            Pegi = (byte)18,
                            Price = 42.02m,
                            ReleaseDate = new DateTime(2017, 5, 16, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Description = @"Velit in ea aliqua sint veniam fugiat eiusmod. Incididunt cillum do pariatur cillum dolore occaecat ad. Minim aute laborum ex dolore. Ea exercitation minim et nostrud in elit eu esse amet eiusmod. Ad ut nostrud qui consectetur sunt consequat magna magna labore qui.
",
                            IsDigitalMedia = true,
                            Name = "The Last of Us",
                            Pegi = (byte)16,
                            Price = 55.15m,
                            ReleaseDate = new DateTime(2017, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Description = @"Incididunt ullamco quis eu consectetur. Elit nostrud ipsum amet minim non nostrud ipsum dolore magna magna. Ad deserunt elit velit esse aliqua quis proident in cupidatat quis. Ullamco ut in labore ad tempor aliqua aute quis amet occaecat irure. Amet deserunt velit ut ipsum ad anim mollit reprehenderit ea ipsum.
",
                            IsDigitalMedia = false,
                            Name = "Forza Horizon 4",
                            Pegi = (byte)12,
                            Price = 33.02m,
                            ReleaseDate = new DateTime(2017, 8, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            Description = @"Incididunt minim excepteur adipisicing Lorem labore irure incididunt proident sint id qui. Culpa exercitation adipisicing minim sit elit magna nisi pariatur do sint minim irure. Ut do nisi in fugiat aliquip proident. Eiusmod elit et aliquip consectetur eu irure.
",
                            IsDigitalMedia = false,
                            Name = "Might & Magic: Heroes VII",
                            Pegi = (byte)12,
                            Price = 5.53m,
                            ReleaseDate = new DateTime(2017, 6, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("GameShop.Domain.Model.ProductLanguage", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "LanguageId");

                    b.HasIndex("LanguageId");

                    b.ToTable("ProductsLanaguages");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            LanguageId = 1
                        },
                        new
                        {
                            ProductId = 1,
                            LanguageId = 2
                        },
                        new
                        {
                            ProductId = 1,
                            LanguageId = 5
                        },
                        new
                        {
                            ProductId = 2,
                            LanguageId = 2
                        },
                        new
                        {
                            ProductId = 2,
                            LanguageId = 4
                        },
                        new
                        {
                            ProductId = 3,
                            LanguageId = 2
                        },
                        new
                        {
                            ProductId = 4,
                            LanguageId = 1
                        },
                        new
                        {
                            ProductId = 4,
                            LanguageId = 2
                        },
                        new
                        {
                            ProductId = 4,
                            LanguageId = 3
                        },
                        new
                        {
                            ProductId = 4,
                            LanguageId = 4
                        },
                        new
                        {
                            ProductId = 4,
                            LanguageId = 5
                        },
                        new
                        {
                            ProductId = 4,
                            LanguageId = 6
                        },
                        new
                        {
                            ProductId = 5,
                            LanguageId = 2
                        },
                        new
                        {
                            ProductId = 5,
                            LanguageId = 3
                        },
                        new
                        {
                            ProductId = 6,
                            LanguageId = 1
                        },
                        new
                        {
                            ProductId = 6,
                            LanguageId = 3
                        },
                        new
                        {
                            ProductId = 7,
                            LanguageId = 4
                        });
                });

            modelBuilder.Entity("GameShop.Domain.Model.ProductSubCategory", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "SubCategoryId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("ProductsSubCategories");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            SubCategoryId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            SubCategoryId = 1
                        },
                        new
                        {
                            ProductId = 3,
                            SubCategoryId = 2
                        },
                        new
                        {
                            ProductId = 4,
                            SubCategoryId = 3
                        },
                        new
                        {
                            ProductId = 5,
                            SubCategoryId = 1
                        },
                        new
                        {
                            ProductId = 5,
                            SubCategoryId = 7
                        },
                        new
                        {
                            ProductId = 6,
                            SubCategoryId = 6
                        },
                        new
                        {
                            ProductId = 7,
                            SubCategoryId = 5
                        });
                });

            modelBuilder.Entity("GameShop.Domain.Model.Requirements", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GraphicsCard")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("HDD")
                        .HasColumnType("int");

                    b.Property<bool>("IsNetworkConnectionRequire")
                        .HasColumnType("bit");

                    b.Property<string>("OS")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Processor")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<byte>("RAM")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("Requirements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GraphicsCard = "NVIDIA GeForce RTX 2080Ti 11GB / AMD Radeon RX 5700XT 8GB",
                            HDD = 50,
                            IsNetworkConnectionRequire = true,
                            OS = "Windows 7/8/10",
                            Processor = "Intel Core i7 4790 3.6 GHz / AMD FX-9590 4.7 GHz",
                            ProductId = 1,
                            RAM = (byte)6
                        },
                        new
                        {
                            Id = 2,
                            GraphicsCard = "None",
                            HDD = 30,
                            IsNetworkConnectionRequire = true,
                            OS = "None",
                            Processor = "None",
                            ProductId = 2,
                            RAM = (byte)0
                        },
                        new
                        {
                            Id = 3,
                            GraphicsCard = "None",
                            HDD = 10,
                            IsNetworkConnectionRequire = true,
                            OS = "None",
                            Processor = "None",
                            ProductId = 3,
                            RAM = (byte)0
                        },
                        new
                        {
                            Id = 4,
                            GraphicsCard = "NVIDIA GeForce GTX 780 3GB / AMD Radeon R9 290X 4GB",
                            HDD = 10,
                            IsNetworkConnectionRequire = true,
                            OS = "Windows 10",
                            Processor = "Intel Core i7 4790 3.6 GHz / AMD FX-9590 4.7 GHz",
                            ProductId = 4,
                            RAM = (byte)2
                        },
                        new
                        {
                            Id = 5,
                            GraphicsCard = "None",
                            HDD = 50,
                            IsNetworkConnectionRequire = true,
                            OS = "None",
                            Processor = "None",
                            ProductId = 5,
                            RAM = (byte)0
                        },
                        new
                        {
                            Id = 6,
                            GraphicsCard = "None",
                            HDD = 30,
                            IsNetworkConnectionRequire = true,
                            OS = "None",
                            Processor = "None",
                            ProductId = 6,
                            RAM = (byte)0
                        },
                        new
                        {
                            Id = 7,
                            GraphicsCard = "NVIDIA GeForce RTX 2080Ti 11GB / AMD Radeon RX 5700XT 8GB",
                            HDD = 30,
                            IsNetworkConnectionRequire = true,
                            OS = "Windows 8/10",
                            Processor = "Intel Core i5 4690 3.3 GHz / AMD Ryzen 5 3600x 3.8 GHz",
                            ProductId = 7,
                            RAM = (byte)16
                        });
                });

            modelBuilder.Entity("GameShop.Domain.Model.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("GameShop.Domain.Model.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("Stocks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductId = 1,
                            Quantity = 10
                        },
                        new
                        {
                            Id = 2,
                            ProductId = 2,
                            Quantity = 25
                        },
                        new
                        {
                            Id = 3,
                            ProductId = 3,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 4,
                            ProductId = 4,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 5,
                            ProductId = 5,
                            Quantity = 60
                        },
                        new
                        {
                            Id = 6,
                            ProductId = 6,
                            Quantity = 5
                        },
                        new
                        {
                            Id = 7,
                            ProductId = 7,
                            Quantity = 120
                        });
                });

            modelBuilder.Entity("GameShop.Domain.Model.StockOnHold", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ExpireTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("StockId")
                        .HasColumnType("int");

                    b.Property<int>("StockQty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StockId");

                    b.ToTable("StockOnHolds");
                });

            modelBuilder.Entity("GameShop.Domain.Model.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.HasKey("Id");

                    b.ToTable("SubCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "RPG Description",
                            Name = "RPG"
                        },
                        new
                        {
                            Id = 2,
                            Description = "FPS Description",
                            Name = "FPS"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Horror Description",
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 4,
                            Description = "MMO Description",
                            Name = "MMO"
                        },
                        new
                        {
                            Id = 5,
                            Description = "RTS Description",
                            Name = "RTS"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Racing Description",
                            Name = "Racing"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Adventure Description",
                            Name = "Adventure"
                        });
                });

            modelBuilder.Entity("GameShop.Domain.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastActive")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurName")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("GameShop.Domain.Model.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("GameShop.Domain.Model.Address", b =>
                {
                    b.HasOne("GameShop.Domain.Model.User", "User")
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameShop.Domain.Model.CategorySubCategory", b =>
                {
                    b.HasOne("GameShop.Domain.Model.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameShop.Domain.Model.SubCategory", "SubCategory")
                        .WithMany("Categories")
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameShop.Domain.Model.OrderStock", b =>
                {
                    b.HasOne("GameShop.Domain.Model.Order", "Order")
                        .WithMany("OrderStocks")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameShop.Domain.Model.Stock", "Stock")
                        .WithMany("OrderStocks")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameShop.Domain.Model.Photo", b =>
                {
                    b.HasOne("GameShop.Domain.Model.Product", "Product")
                        .WithMany("Photos")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameShop.Domain.Model.Product", b =>
                {
                    b.HasOne("GameShop.Domain.Model.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("GameShop.Domain.Model.ProductLanguage", b =>
                {
                    b.HasOne("GameShop.Domain.Model.Language", "Language")
                        .WithMany("Products")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameShop.Domain.Model.Product", "Product")
                        .WithMany("Languages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameShop.Domain.Model.ProductSubCategory", b =>
                {
                    b.HasOne("GameShop.Domain.Model.Product", "Product")
                        .WithMany("SubCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameShop.Domain.Model.SubCategory", "SubCategory")
                        .WithMany("Products")
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameShop.Domain.Model.Requirements", b =>
                {
                    b.HasOne("GameShop.Domain.Model.Product", "Product")
                        .WithOne("Requirements")
                        .HasForeignKey("GameShop.Domain.Model.Requirements", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameShop.Domain.Model.Stock", b =>
                {
                    b.HasOne("GameShop.Domain.Model.Product", "Product")
                        .WithOne("Stock")
                        .HasForeignKey("GameShop.Domain.Model.Stock", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameShop.Domain.Model.StockOnHold", b =>
                {
                    b.HasOne("GameShop.Domain.Model.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameShop.Domain.Model.UserRole", b =>
                {
                    b.HasOne("GameShop.Domain.Model.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameShop.Domain.Model.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("GameShop.Domain.Model.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("GameShop.Domain.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("GameShop.Domain.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("GameShop.Domain.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
